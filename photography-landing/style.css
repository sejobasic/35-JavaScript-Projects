@import url('https://fonts.googleapis.com/css2?family=Gloock&family=Hanken+Grotesk:wght@300;400;500;700&display=swap');

:root {
  --header1: calc(2rem + 1vw);
  --header2: calc(3.5rem + 1vw);
  --header3: calc(3rem + 1vw);
  --header4: calc(2.4rem + 1vw);
  --text: calc(1.5rem + 1vw);
  --big-text: calc(2.4rem + 1vw);
  --grey-text: #525252;
  --bg-color: #414141;
  --accent-color: #906272;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 62.5%;
}

body {
  font-size: 1.6rem;
  font-family: 'Hanken Grotesk', sans-serif;
  color: black;
  animation: intro 2s ease-in-out;
}

h1 {
  font-size: var(--header1);
  font-family: 'Gloock', serif;
}

h2 {
  font-size: var(--header2);
}

h3 {
  font-size: var(--header3);
}

h4 {
  font-size: var(--header4);
}

li,
button,
label,
input,
a,
p {
  font-size: var(--text);
}

a {
  text-decoration: none;
  color: black;
}

ul {
  list-style: none;
}

.flex {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.main-heading {
  box-shadow: 0px 10px 10px rgba(0, 0, 0, 0.1);
  z-index: 2;
  position: relative;
}

nav {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 90%;
  margin: auto;
  padding: 2rem;
  min-height: 10vh;
}

.nav-links {
  display: flex;
  gap: 30px;
}

.nav-links a:hover {
  text-decoration: underline;
}

.nav-links a:visited {
  text-decoration: underline;
}

.hero {
  display: flex;
  flex-wrap: wrap;
  min-height: 90vh;
  margin: auto;
  overflow-x: hidden;
}

.hero-text {
  flex: 2 1 40rem;
  text-align: center;
  margin-top: 2rem;
}

.hero-text p {
  padding: 5rem 10rem;
  color: var(--grey-text);
}

.hero-text a {
  border: 2px solid black;
  padding: 1rem 2rem;
  border-radius: 10px;
  margin-bottom: 2rem;
}

.hero-text a:hover {
  background-color: black;
  color: white;
}

.hero-images {
  position: relative;
  flex: 1 1 40rem;
  background: linear-gradient(#dad8dd, #dad1d4);
  z-index: 1;
}

.hero-elena {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.plant {
  position: absolute;
  bottom: 0;
  left: -20%;
  z-index: -1;
  animation: plant-entrance 1.5s ease-in-out,
    plant-shake 2.4s infinite ease alternate-reverse 2s;
}

.plant2 {
  left: 40%;
}

.burger-menu,
.close-menu {
  display: none;
}

.about {
  display: flex;
  flex-wrap: wrap;
  min-height: 100vh;
}

.about-text {
  flex: 2 1 40rem;
  justify-content: space-around;
  background: var(--bg-color);
  color: white;
}

.about-text div {
  padding: 3rem 10rem;
}

.about-text h2 {
  margin-top: 2rem;
}

.about-text h3 {
  text-transform: uppercase;
}

.about-image {
  position: relative;
  flex: 1 1 40rem;
}

.about-image h5 {
  position: absolute;
  font-size: var(--header2);
  top: 20%;
  left: 50%;
  transform: translate(-50%, -20%);
  letter-spacing: 2rem;
  color: var(--grey-text);
}

.about-image img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.gallery {
  display: grid;
  min-height: 100vh;
  grid-template-columns: repeat(3, 1fr);
}

.gallery img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.gallery1 {
  grid-column: 1/3;
}

.gallery2 {
  grid-column: 3/4;
  grid-row: 1/3;
}

@media screen and (max-width: 800px) {
  .burger-menu {
    display: block;
    z-index: 100;
  }

  .burger-menu span {
    display: block;
    padding: 0.2rem 2rem;
    background: var(--grey-text);
    margin: 0.5rem 0rem;
  }

  .burger-menu,
  .close-menu {
    cursor: pointer;
  }

  .close-menu {
    font-size: 3rem;
    color: white;
    z-index: 100;
  }

  .nav-links {
    position: fixed;
    background-color: var(--bg-color);
    width: 100%;
    height: 100%;
    top: 0;
    left: 100%;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    transition: transform 0.5s ease;
  }

  .nav-links a {
    color: white;
    font-size: var(--header3);
  }

  .gallery img {
    grid-row: auto;
    grid-column: auto;
  }
}

@keyframes intro {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes plant-entrance {
  from {
    transform: translateY(-10%);
  }
  to {
    transform: translateY(0);
  }
}
